@model ChartJsTryouts.Web.Models.DeliveryOverviewViewModel

@{
    ViewData["Title"] = "DeliveryOverview";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>DeliveryOverview</h1>


@{
    var allDates = Model.Days.Select(i => i.DeliveryCreation).Distinct().OrderBy(o => o).ToArray();

    var lastDays = string.Join(", ", allDates.Select(d => "\"" + d.ToString("dd.MM.yyyy") + "\""));
}

<div style="width: 100%; display: inline-block;">

    <canvas id="deliveryoverview"></canvas>

    <script>

        window.chartColors = {
            red: 'rgb(255, 99, 132)',
            orange: 'rgb(255, 159, 64)',
            yellow: 'rgb(255, 205, 86)',
            green: 'rgb(75, 192, 192)',
            blue: 'rgb(54, 162, 235)',
            purple: 'rgb(153, 102, 255)',
            grey: 'rgb(201, 203, 207)'
        };

        //----------

        $(document).ready(
            function() {
                var canvas = document.getElementById("deliveryoverview");
                var ctx = canvas.getContext("2d");

                var deliveryStats = new Chart(ctx,
                {
                    type: 'horizontalBar',
                    data: {
                        labels: [@Html.Raw(lastDays)],
                        xValueType: "dateTime",
                        datasets: [
                            {
                                label: 'Peter Smith',
                                backgroundColor: window.chartColors.grey,
                                stack: 'Stack 0',
                                data: [

                                    @foreach (var paus in Model.PeterSmith.OrderBy(p=>p.Key))
                                    {
                                        <text>
                                            @Html.Raw(paus.Value),
                                        </text>
                                    }

                                ]
                            },
                            {
                                label: 'Sasha Herrman',
                                backgroundColor: window.chartColors.orange,
                                stack: 'Stack 0',
                                data: [

                                    @foreach (var paus in Model.SashaHerrman.OrderBy(p=>p.Key))
                                    {
                                        <text>
                                            @Html.Raw(paus.Value),
                                        </text>
                                    }

                                ]
                            },
                            {
                                label: 'Robert Pope',
                                backgroundColor: window.chartColors.blue,
                                stack: 'Stack 0',
                                data: [

                                    @foreach (var paus in Model.RobertPope.OrderBy(p=>p.Key))
                                    {
                                        <text>
                                            @Html.Raw(paus.Value),
                                        </text>
                                    }

                                ]
                            },
                            {
                                label: 'Monica Snyder',
                                backgroundColor: window.chartColors.green,
                                stack: 'Stack 0',
                                data: [

                                    @foreach (var paus in Model.MonicaSnyder.OrderBy(p=>p.Key))
                                    {
                                        <text>
                                            @Html.Raw(paus.Value),
                                        </text>
                                    }

                                ]
                            },
                            {
                                label: 'Beatrix Zimmerman',
                                backgroundColor: window.chartColors.red,
                                stack: 'Stack 0',
                                data: [

                                    @foreach (var paus in Model.BeatrixZimmermann.OrderBy(p=>p.Key))
                                    {
                                        <text>
                                            @Html.Raw(paus.Value),
                                        </text>
                                    }

                                ]
                            }
                        ]
                    },

                    options: {
                        scales: {
                            xAxes: [{
                                stacked: true
                            }],
                            yAxes: [{
                                stacked: true
                            }]
                        }
                    }

                });


                canvas.onclick = function(evt) {
                    var activePoints = deliveryStats.getElementsAtEvent(evt);

                    if (activePoints[0]) {
                        var chartData = activePoints[0]['_chart'].config.data;
                        var idx = activePoints[0]['_index'];
                        // []{18.05, 19.05, 20.05, 21.05} -> Index = 2 ==> 20.05

                        var label = chartData.labels[idx]; // 20.05

                        var url = "/Delivery/OfDay?day="+label;
                        console.log(url);

                        window.open(url, '_blank');
                    }
                };


            }
        );


    </script>

</div>
